<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'old_sound_rabbit_mq.send_email_consumer' shared service.

include_once $this->targetDirs[3].'/vendor/php-amqplib/rabbitmq-bundle/RabbitMq/BaseAmqp.php';
include_once $this->targetDirs[3].'/vendor/php-amqplib/rabbitmq-bundle/RabbitMq/DequeuerInterface.php';
include_once $this->targetDirs[3].'/vendor/php-amqplib/rabbitmq-bundle/RabbitMq/BaseConsumer.php';
include_once $this->targetDirs[3].'/vendor/php-amqplib/rabbitmq-bundle/RabbitMq/Consumer.php';
include_once $this->targetDirs[3].'/vendor/php-amqplib/rabbitmq-bundle/RabbitMq/ConsumerInterface.php';
include_once $this->targetDirs[3].'/src/AnalyticsBundle/Consumer/DataSenderConsumer.php';

$this->services['old_sound_rabbit_mq.send_email_consumer'] = $instance = new \OldSound\RabbitMqBundle\RabbitMq\Consumer(($this->services['old_sound_rabbit_mq.connection.default'] ?? $this->load('getOldSoundRabbitMq_Connection_DefaultService.php')));

$instance->setExchangeOptions(['name' => 'notification.v1.send_email', 'type' => 'direct', 'passive' => false, 'durable' => true, 'auto_delete' => false, 'internal' => false, 'nowait' => false, 'declare' => true, 'arguments' => NULL, 'ticket' => NULL]);
$instance->setQueueOptions(['name' => 'notification.v1.send_email', 'passive' => false, 'durable' => true, 'exclusive' => false, 'auto_delete' => false, 'nowait' => false, 'declare' => true, 'arguments' => NULL, 'ticket' => NULL, 'routing_keys' => []]);
$instance->setCallback([0 => new \App\AnalyticsBundle\Consumer\DataSenderConsumer(), 1 => 'execute']);
if ($this->has('event_dispatcher')) {
    $instance->setEventDispatcher(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
}

return $instance;
